
@model WeBBasedMITSData.JunctionList

@{
	ViewBag.Title = "Edit";
}

<h2 style="color:#f8b739">Edit</h2>

@using (Html.BeginForm())
{
	<form>
		<h4 style="color:#f8b739">Junction List</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "" })
		@Html.HiddenFor(model => model.Id)
		<div class="form-row">
			<div class="form-group col-md-10">
				@Html.LabelFor(model => model.JunctionId@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
				@Html.EditorFor(model => model.JunctionId, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.JunctionId, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-row ">
			<div class="col-md-4">
				@Html.LabelFor(model => model.Name@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
			<div class="col-md-2"></div>
			<div class="col-md-4">
				@Html.LabelFor(model => model.District@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)

				@Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-row">
			<div class="col-md-4">
				@Html.LabelFor(model => model.Latitude@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
				@Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
			</div>
			<div class="col-md-2"></div>
			<div class="col-md-4">
				@Html.LabelFor(model => model.Longitude@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
				@Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-row">
			<div class="col-md-10">
				@Html.LabelFor(model => model.JunctionIp@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
				@Html.EditorFor(model => model.JunctionIp, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.JunctionIp, "", new { @class = "text-danger" })
			</div>

		</div>
		<br />
		<div class="form-row">
			<div class="col-md-4">
				<input type="submit" value="Save" class="btn btn-primary" />

			</div>

		</div>
		@*<div class="form-group">
				@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
				</div>
			</div>*@
		@*<div class="form-row">
				<div class="col-md-offset-2 col-md-2">
					<button type="submit" value="Save" class="btn btn-primary" />
				</div>
			</div>*@
	</form>
}
@Html.ActionLink("Back to List", "GetJunctionList")
