@model WeBBasedMITSData.JunctionList

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
	<div class="form-horizontal">
		<h4>Employee</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.JunctionId)

		<div class="form-row ">
			<div class="col-md-4">
				@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
				<div>
					@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="col-md-2"></div>
			<div class="col-md-4">
				@Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
				<div>
					@Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="form-row">
			<div class="col-md-4">
				@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
				<div>
					@Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="col-md-2"></div>
			<div class="col-md-4">
				@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
				<div>
					@Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="form-row">
			<div class="col-md-10">
				@Html.LabelFor(model => model.JunctionIp, htmlAttributes: new { @class = "control-label col-md-2" })
				<div>
					@Html.EditorFor(model => model.JunctionIp, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.JunctionIp, "", new { @class = "text-danger" })
				</div>
			</div>

		</div>
		@*<div class="form-group">
				@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
				</div>
			</div>*@
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "GetJunctionList")
</div>